// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.saas.golf.web.scaffold;

import com.saas.golf.domain.Account;
import com.saas.golf.domain.Competition;
import com.saas.golf.domain.GolfClub;
import com.saas.golf.domain.GolfCourse;
import com.saas.golf.domain.GolfCourseHole;
import com.saas.golf.domain.GolfRound;
import com.saas.golf.domain.GolfSociety;
import com.saas.golf.domain.Golfer;
import com.saas.golf.domain.Player;
import com.saas.golf.domain.PlayerParticipant;
import com.saas.golf.domain.ScoreCard;
import com.saas.golf.repository.AccountRepository;
import com.saas.golf.repository.CompetitionRepository;
import com.saas.golf.repository.GolfClubRepository;
import com.saas.golf.repository.GolfCourseHoleRepository;
import com.saas.golf.repository.GolfCoursesRepository;
import com.saas.golf.repository.GolfRoundRepository;
import com.saas.golf.repository.GolfSocietyRepository;
import com.saas.golf.repository.GolferRepository;
import com.saas.golf.repository.PlayerParticipantRepository;
import com.saas.golf.repository.PlayerRepository;
import com.saas.golf.repository.ScoreCardRepository;
import com.saas.golf.web.scaffold.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AccountRepository ApplicationConversionServiceFactoryBean.accountRepository;
    
    @Autowired
    CompetitionRepository ApplicationConversionServiceFactoryBean.competitionRepository;
    
    @Autowired
    GolfClubRepository ApplicationConversionServiceFactoryBean.golfClubRepository;
    
    @Autowired
    GolfCoursesRepository ApplicationConversionServiceFactoryBean.golfCoursesRepository;
    
    @Autowired
    GolfCourseHoleRepository ApplicationConversionServiceFactoryBean.golfCourseHoleRepository;
    
    @Autowired
    GolfRoundRepository ApplicationConversionServiceFactoryBean.golfRoundRepository;
    
    @Autowired
    GolfSocietyRepository ApplicationConversionServiceFactoryBean.golfSocietyRepository;
    
    @Autowired
    GolferRepository ApplicationConversionServiceFactoryBean.golferRepository;
    
    @Autowired
    PlayerRepository ApplicationConversionServiceFactoryBean.playerRepository;
    
    @Autowired
    PlayerParticipantRepository ApplicationConversionServiceFactoryBean.playerParticipantRepository;
    
    @Autowired
    ScoreCardRepository ApplicationConversionServiceFactoryBean.scoreCardRepository;
    
    public Converter<Account, String> ApplicationConversionServiceFactoryBean.getAccountToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.Account, java.lang.String>() {
            public String convert(Account account) {
                return new StringBuilder().append(account.getTitle()).append(" ").append(account.getFirstName()).append(" ").append(account.getLastName()).append(" ").append(account.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Account> ApplicationConversionServiceFactoryBean.getIdToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.Account>() {
            public com.saas.golf.domain.Account convert(java.math.BigInteger id) {
                return accountRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Account> ApplicationConversionServiceFactoryBean.getStringToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.Account>() {
            public com.saas.golf.domain.Account convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Account.class);
            }
        };
    }
    
    public Converter<Competition, String> ApplicationConversionServiceFactoryBean.getCompetitionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.Competition, java.lang.String>() {
            public String convert(Competition competition) {
                return new StringBuilder().append(competition.getName()).append(" ").append(competition.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Competition> ApplicationConversionServiceFactoryBean.getIdToCompetitionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.Competition>() {
            public com.saas.golf.domain.Competition convert(java.math.BigInteger id) {
                return competitionRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Competition> ApplicationConversionServiceFactoryBean.getStringToCompetitionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.Competition>() {
            public com.saas.golf.domain.Competition convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Competition.class);
            }
        };
    }
    
    public Converter<GolfClub, String> ApplicationConversionServiceFactoryBean.getGolfClubToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.GolfClub, java.lang.String>() {
            public String convert(GolfClub golfClub) {
                return new StringBuilder().append(golfClub.getGolfClubName()).append(" ").append(golfClub.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, GolfClub> ApplicationConversionServiceFactoryBean.getIdToGolfClubConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.GolfClub>() {
            public com.saas.golf.domain.GolfClub convert(java.math.BigInteger id) {
                return golfClubRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, GolfClub> ApplicationConversionServiceFactoryBean.getStringToGolfClubConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.GolfClub>() {
            public com.saas.golf.domain.GolfClub convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), GolfClub.class);
            }
        };
    }
    
    public Converter<GolfCourse, String> ApplicationConversionServiceFactoryBean.getGolfCourseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.GolfCourse, java.lang.String>() {
            public String convert(GolfCourse golfCourse) {
                return new StringBuilder().append(golfCourse.getName()).append(" ").append(golfCourse.getCourseType()).append(" ").append(golfCourse.getYearBuilt()).append(" ").append(golfCourse.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, GolfCourse> ApplicationConversionServiceFactoryBean.getIdToGolfCourseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.GolfCourse>() {
            public com.saas.golf.domain.GolfCourse convert(java.math.BigInteger id) {
                return golfCoursesRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, GolfCourse> ApplicationConversionServiceFactoryBean.getStringToGolfCourseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.GolfCourse>() {
            public com.saas.golf.domain.GolfCourse convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), GolfCourse.class);
            }
        };
    }
    
    public Converter<GolfCourseHole, String> ApplicationConversionServiceFactoryBean.getGolfCourseHoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.GolfCourseHole, java.lang.String>() {
            public String convert(GolfCourseHole golfCourseHole) {
                return new StringBuilder().append(golfCourseHole.getName()).append(" ").append(golfCourseHole.getPar()).append(" ").append(golfCourseHole.getHoleIndex()).append(" ").append(golfCourseHole.getHoleNumber()).toString();
            }
        };
    }
    
    public Converter<BigInteger, GolfCourseHole> ApplicationConversionServiceFactoryBean.getIdToGolfCourseHoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.GolfCourseHole>() {
            public com.saas.golf.domain.GolfCourseHole convert(java.math.BigInteger id) {
                return golfCourseHoleRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, GolfCourseHole> ApplicationConversionServiceFactoryBean.getStringToGolfCourseHoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.GolfCourseHole>() {
            public com.saas.golf.domain.GolfCourseHole convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), GolfCourseHole.class);
            }
        };
    }
    
    public Converter<GolfRound, String> ApplicationConversionServiceFactoryBean.getGolfRoundToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.GolfRound, java.lang.String>() {
            public String convert(GolfRound golfRound) {
                return new StringBuilder().append(golfRound.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, GolfRound> ApplicationConversionServiceFactoryBean.getIdToGolfRoundConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.GolfRound>() {
            public com.saas.golf.domain.GolfRound convert(java.math.BigInteger id) {
                return golfRoundRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, GolfRound> ApplicationConversionServiceFactoryBean.getStringToGolfRoundConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.GolfRound>() {
            public com.saas.golf.domain.GolfRound convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), GolfRound.class);
            }
        };
    }
    
    public Converter<GolfSociety, String> ApplicationConversionServiceFactoryBean.getGolfSocietyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.GolfSociety, java.lang.String>() {
            public String convert(GolfSociety golfSociety) {
                return new StringBuilder().append(golfSociety.getSocietyName()).append(" ").append(golfSociety.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, GolfSociety> ApplicationConversionServiceFactoryBean.getIdToGolfSocietyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.GolfSociety>() {
            public com.saas.golf.domain.GolfSociety convert(java.math.BigInteger id) {
                return golfSocietyRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, GolfSociety> ApplicationConversionServiceFactoryBean.getStringToGolfSocietyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.GolfSociety>() {
            public com.saas.golf.domain.GolfSociety convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), GolfSociety.class);
            }
        };
    }
    
    public Converter<Golfer, String> ApplicationConversionServiceFactoryBean.getGolferToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.Golfer, java.lang.String>() {
            public String convert(Golfer golfer) {
                return new StringBuilder().append(golfer.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Golfer> ApplicationConversionServiceFactoryBean.getIdToGolferConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.Golfer>() {
            public com.saas.golf.domain.Golfer convert(java.math.BigInteger id) {
                return golferRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Golfer> ApplicationConversionServiceFactoryBean.getStringToGolferConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.Golfer>() {
            public com.saas.golf.domain.Golfer convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Golfer.class);
            }
        };
    }
    
    public Converter<Player, String> ApplicationConversionServiceFactoryBean.getPlayerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.Player, java.lang.String>() {
            public String convert(Player player) {
                return new StringBuilder().append(player.getPlayerName()).append(" ").append(player.getHandicap()).append(" ").append(player.getDateCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Player> ApplicationConversionServiceFactoryBean.getIdToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.Player>() {
            public com.saas.golf.domain.Player convert(java.math.BigInteger id) {
                return playerRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Player> ApplicationConversionServiceFactoryBean.getStringToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.Player>() {
            public com.saas.golf.domain.Player convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Player.class);
            }
        };
    }
    
    public Converter<PlayerParticipant, String> ApplicationConversionServiceFactoryBean.getPlayerParticipantToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.PlayerParticipant, java.lang.String>() {
            public String convert(PlayerParticipant playerParticipant) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<BigInteger, PlayerParticipant> ApplicationConversionServiceFactoryBean.getIdToPlayerParticipantConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.PlayerParticipant>() {
            public com.saas.golf.domain.PlayerParticipant convert(java.math.BigInteger id) {
                return playerParticipantRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, PlayerParticipant> ApplicationConversionServiceFactoryBean.getStringToPlayerParticipantConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.PlayerParticipant>() {
            public com.saas.golf.domain.PlayerParticipant convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), PlayerParticipant.class);
            }
        };
    }
    
    public Converter<ScoreCard, String> ApplicationConversionServiceFactoryBean.getScoreCardToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.saas.golf.domain.ScoreCard, java.lang.String>() {
            public String convert(ScoreCard scoreCard) {
                return new StringBuilder().append(scoreCard.getName()).append(" ").append(scoreCard.getPar()).append(" ").append(scoreCard.getCourseLengthYards()).append(" ").append(scoreCard.getCourseLengthMeters()).toString();
            }
        };
    }
    
    public Converter<BigInteger, ScoreCard> ApplicationConversionServiceFactoryBean.getIdToScoreCardConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.saas.golf.domain.ScoreCard>() {
            public com.saas.golf.domain.ScoreCard convert(java.math.BigInteger id) {
                return scoreCardRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, ScoreCard> ApplicationConversionServiceFactoryBean.getStringToScoreCardConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.saas.golf.domain.ScoreCard>() {
            public com.saas.golf.domain.ScoreCard convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), ScoreCard.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAccountToStringConverter());
        registry.addConverter(getIdToAccountConverter());
        registry.addConverter(getStringToAccountConverter());
        registry.addConverter(getCompetitionToStringConverter());
        registry.addConverter(getIdToCompetitionConverter());
        registry.addConverter(getStringToCompetitionConverter());
        registry.addConverter(getGolfClubToStringConverter());
        registry.addConverter(getIdToGolfClubConverter());
        registry.addConverter(getStringToGolfClubConverter());
        registry.addConverter(getGolfCourseToStringConverter());
        registry.addConverter(getIdToGolfCourseConverter());
        registry.addConverter(getStringToGolfCourseConverter());
        registry.addConverter(getGolfCourseHoleToStringConverter());
        registry.addConverter(getIdToGolfCourseHoleConverter());
        registry.addConverter(getStringToGolfCourseHoleConverter());
        registry.addConverter(getGolfRoundToStringConverter());
        registry.addConverter(getIdToGolfRoundConverter());
        registry.addConverter(getStringToGolfRoundConverter());
        registry.addConverter(getGolfSocietyToStringConverter());
        registry.addConverter(getIdToGolfSocietyConverter());
        registry.addConverter(getStringToGolfSocietyConverter());
        registry.addConverter(getGolferToStringConverter());
        registry.addConverter(getIdToGolferConverter());
        registry.addConverter(getStringToGolferConverter());
        registry.addConverter(getPlayerToStringConverter());
        registry.addConverter(getIdToPlayerConverter());
        registry.addConverter(getStringToPlayerConverter());
        registry.addConverter(getPlayerParticipantToStringConverter());
        registry.addConverter(getIdToPlayerParticipantConverter());
        registry.addConverter(getStringToPlayerParticipantConverter());
        registry.addConverter(getScoreCardToStringConverter());
        registry.addConverter(getIdToScoreCardConverter());
        registry.addConverter(getStringToScoreCardConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
